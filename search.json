[{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/custom_anno.html","id":"a-good-annotation-dataframe","dir":"Articles","previous_headings":"","what":"A good annotation dataframe","title":"Create and use custom sites annotation","text":"good annotation dataframe must following columns : Position : position site RNA RNA : name RNA site interest located Nomenclature : Custom name site interest example : (columns ordering important, respecting require extra arguments function call next section) free add columns, ignored rRMSAnalyzer.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/custom_anno.html","id":"annotate-sites-with-your-custom-dataframe","dir":"Articles","previous_headings":"","what":"Annotate sites with your custom dataframe","title":"Create and use custom sites annotation","text":"First, check RNAs inside RiboClass name RNAs annotation dataframe. , can use rename_rna change names inside RiboClass modify annotation dataframe. done. can use annotate_site :","code":"# In this example, ribo is the RiboClass we want to annotate ribo <- annotate_site(ribo,MyAnnotationDataframe)  # If columns are not in the same order as the example table, # each column index or name must be precised then.  ribo <- annotate_site(ribo,                       MyAnnotationDataframe,                       anno_rna = 3,                       anno_pos = 2,                       anno_value = 1)"},{"path":[]},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/custom_ribo.html","id":"remove-rna","dir":"Articles","previous_headings":"Functions to modify RNAs","what":"Remove RNA","title":"Customizing a RiboClass","text":"RNA subset can easily analyzed indicating RNA remove. user can thus create new RiboClass object containing data RNAs interest, without affecting samples’ metadata. example RNA 5S removed:","code":"ribo_adjusted <- remove_rna(ribo_toy, rna_to_remove = \"NR_023363.1_5S\") print(ribo_adjusted) #> a RiboClass with 14 samples and 3 RNA(s) : #> Name : NR_046235.3_5.8S, length : 157 #>  Name : NR_046235.3_18S, length : 1869 #>  Name : NR_046235.3_28S, length : 5070"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/custom_ribo.html","id":"rename-rna","dir":"Articles","previous_headings":"Functions to modify RNAs","what":"Rename RNA","title":"Customizing a RiboClass","text":"always better readable RNA names plots. section important annotation rRNA 2’Ome sites using annotation dataframe. RiboClass must shares RNA names latter. example check whether RNA names provided user RiboClass match ones used package : example, names different need updated annotation. function rename_rna updates automatically rRNA names given rRNA size order:","code":"data(\"human_methylated\") cat(\"human_methylated's rna names: \", unique(human_methylated$rRNA),\"\\n\") #> human_methylated's rna names:  5.8S 18S 28S cat(\"ribo_toy's rna names: \", as.character(ribo_adjusted$rna_names$current_name)) #> ribo_toy's rna names:  NR_046235.3_5.8S NR_046235.3_18S NR_046235.3_28S ribo_adjusted <- rename_rna(ribo_adjusted,                             new_names = c(\"5.8S\", \"18S\", \"28S\"))                              # from the shortest RNA in our RiboClass to the longest."},{"path":[]},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/custom_ribo.html","id":"keep-only-a-set-samples","dir":"Articles","previous_headings":"Functions to modify samples","what":"Keep only a set samples","title":"Customizing a RiboClass","text":"sample subset can easily analyzed indicating samples keep. user can thus create new RiboClass object containing data metadata samples interest. remaining samples’ metadata kept RiboClass object, manual updating required. example generate new RiboClass keeping two samples interest (“S1” “S2”):","code":"ribo_2samples <- keep_ribo_samples(ribo_adjusted,c(\"S1\",\"S2\")) print(ribo_2samples) #> a RiboClass with 2 samples and 3 RNA(s) : #> Name : 5.8S, length : 157 #>  Name : 18S, length : 1869 #>  Name : 28S, length : 5070"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/custom_ribo.html","id":"remove-samples","dir":"Articles","previous_headings":"Functions to modify samples","what":"Remove samples","title":"Customizing a RiboClass","text":"Unlike previous section, samples indicated removed RiboClass. metadata updated accordingly. example generate new RiboClass removing two samples (“S1” “S2”):","code":"ribo_removed_samples <- remove_ribo_samples(ribo_toy,c(\"S1\",\"S1\")) print(ribo_removed_samples) #> a RiboClass with 13 samples and 4 RNA(s) : #> Name : NR_023363.1_5S, length : 121 #>  Name : NR_046235.3_5.8S, length : 157 #>  Name : NR_046235.3_18S, length : 1869 #>  Name : NR_046235.3_28S, length : 5070"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"help-bug-reports-and-suggestions","dir":"Articles","previous_headings":"","what":"Help, bug reports and suggestions","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"report bug suggestion improve package, please let us known opening new issue : github issue link coming soon!","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"acknowledgements","dir":"Articles","previous_headings":"","what":"Acknowledgements","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"like thank collaborators advices suggestions.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"funding","dir":"Articles","previous_headings":"","what":"Funding","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"project funded French Cancer Institute (INCa, PLBIO 2019-138 MARACAS), SIRIC Program (INCa-DGOS-Inserm_12563 LyRICAN) Synergie Lyon Cancer Foundation.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"latest version rRMSAnalyzer package can installed Github :","code":"library(devtools) devtools::install_github(\"RibosomeCRCL/rRMSAnalyzer\")"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"","code":"library(rRMSAnalyzer)  ribo <- load_ribodata(               count_path = \"/path/to/your/csvfiles/directory/\",               metadata = \"path/to/metadata.csv\",               metadata_key = \"filename\",               metadata_id = \"samplename\")  # Compute the c-score using different parameters, # including calculation of the local coverage using the mean instead of the median ribo <- compute_cscore(ribo, method = \"mean\")  # If necessary, adjust any technical biases using ComBat-Seq. # Here, as an example, we use the \"library\" column in metadata. ribo <- adjust_bias(ribo,\"library\")  # Plot a Principal Component Analysis (PCA) whose colors depend on the \"condition\" column in metadata plot_pca(ribo,\"condition\")"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"riboclass","dir":"Articles","previous_headings":"","what":"RiboClass","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"RiboClass main class package enables storage data matrices (counts c-scores) associated metadata. automatically created calling load_ribodata (see Loading data). list containing three main elements, individually described : Data: list dataframe, containing sample 5’ /3’ read-end counts provided user, calculated C-score. Metadata: dataframe, containing information related samples can provided user. RNA_names: dataframe, reporting names RNA used Data. major function parameters (normalization method used c-score computation) also kept RiboClass object reminder.","code":""},{"path":[]},{"path":[]},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"read-end-counts","dir":"Articles","previous_headings":"Loading data > Data to provide","what":"Read-end counts","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"use package, user must provide least one csv/tsv file 5’, 3’ 5’/3’ read end counts resulting RiboMethSeq data per sample. folder structure containing csv files important, long either directory sub-directories contain necessary csv/tsv files. name RNA read end counting performed. number position RNA. value read end counts position. example : Note 1: necessary provide header count files, column index can used function load_ribodata, using count_value, count_rnaid count_pos parameters. Note 2: metadata specified, rRMSAnalyzer try fetch csv files folder specified count_path subfolders.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"metadata","dir":"Articles","previous_headings":"Loading data > Data to provide","what":"Metadata","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"expected metadata either dataframe already R environment csv/tsv file. Two columns mandatory metadata : filename: name csv file disk containing read end counts described . modify unless filename changed disk. samplename: rename samples analyzed displayed plots. column can modified, long sample names unique. two mandatory columns, user can provide many columns needed analysis. example metadata three samples: filename (mandatory) samplename (mandatory) biological condition (optionnal) Note: metadata provided load_ribodata, empty metadata created “filename” “samplename” columns pre-filled. “samplename” column identical “filename”, can modified user. example auto-generated metadata:","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"how-to-load-the-data","dir":"Articles","previous_headings":"Loading data > Data to provide","what":"How to load the data","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"load data metadata, store RiboClass, function load_ribodata used. following example displays call load_ribodata, parameters shown :","code":"path <- system.file(\"extdata\", package=\"rRMSAnalyzer\")  ribo <- load_ribodata(                       #data & metadata files path                       count_path = file.path(path,\"miniglioma/\"),                       metadata = file.path(path,\"metadata.csv\"),                       # data & metadata files separator                       count_sep = \"\\t\",                       metadata_sep = \",\",                       # count data parameters :                       count_header = FALSE,                       count_value = 3,                       count_rnaid = 1,                       count_pos = 2,                       # Metadata parameters :                       metadata_key = \"filename\",                       metadata_id = \"samplename\",                       # c-score parameters :                       flanking = 6,                       method = \"median\",                       ncores = 1) #> ✔ Your data has been successfully loaded!"},{"path":[]},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"provided","dir":"Articles","previous_headings":"Loading data > RNA names","what":"Provided","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"RNA names automatically obtained data stored generated dataframe inside RiboClass. contains two columns : original_name: original name RNA (e.g NR_023363.1). current_name: current name RNA, reflecting user’s change rename_rna function (see Rename RNA). dataframe used keep track original name, often includes NCBI’s accession ID. example:","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"custom","dir":"Articles","previous_headings":"Loading data > RNA names","what":"Custom","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"user must modify dataframe manually. rename remove RNA, user can use rename_rna remove_rna. dataframe updated accordingly.","code":""},{"path":[]},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"what-is-a-c-score","dir":"Articles","previous_headings":"C-score calculation","what":"What is a C-score ?","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"C-score metric, calculated RiboMethSeq sequencing data, used evaluate level 2’O-ribose methylation (2’Ome) given position RNA. C-score calculated normalizing end read count respect local environment genomic position directly indicates RNA 2’Ome level. C-score ranges 0 (.e., RNA molecules sample 2’Ome specific site) 1 (.e., RNA molecules sample 2’Ome specific site). C-score intermediate value 0 1 means sample contains mixture un-2’Ome 2’Ome RNA molecules. obtain robust estimate 2’Ome level, different C-scores can determined depending parameters used compute local coverage. particular, estimation method size local coverage considered can changed. default, local coverage estimated calculating median end read counts flanking region 6 (.e., 6 nucleotides downstream nucleotide n 6 upstream nucleotide n, n nucleotid directly following 2’Ome site interest). package provide ability change two parameters either loading data analysis.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"c-score-computation-when-loading-data","dir":"Articles","previous_headings":"C-score calculation","what":"C-score computation when loading data","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"using load_ribodata function, C-score automatically calculated genomic positions RNA. C-score computed using either default parameters load_ribodata function user-defined parameters follows:","code":"load_ribodata(count.path = \"/path/to/csv/\",               metadata = \"/path/to/metadata.csv\",               # everything below is linked to c-score computation               flanking = 6, # flanking region size               method = \"median\", # use mean or median on flanking region's values               ncores = 8 # number of CPU cores to use for computation               )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"c-score-computation-during-the-analysis","dir":"Articles","previous_headings":"C-score calculation","what":"C-score computation during the analysis","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"analysis, C-score calculating parameters (method size flanking region) can modified using compute_cscore function, automatically update C-score RiboClass. following example, flanking region’s size local coverage computation method modified: Important: function override previous c-score RiboClass.","code":"ribo <- compute_cscore(ribo,                        flanking = 4,                        method = \"mean\")"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"quality-control","dir":"Articles","previous_headings":"","what":"Quality control","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"Due technical limitations, sometimes necessary conduct wet-lab preparations large cohorts several batches. main risk making several batches introduce technical biases batch effect dataset.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"quality-control-report","dir":"Articles","previous_headings":"Quality control","what":"Quality control report","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"quality control (QC) report can performed. uses several metrics help identify outlier samples /batch effects, including end read counts C-score 7217 genomic positions. QC verifies coverage uniform reproducible samples, eliminating possibility bias due sequencing outliers QC can either performed using panel ready use functions, correspond data visualization, automatically. automatic QC report can generated using report_qc function: ribo_toy example, column contains information samples batches called “run”. name thus given library_col parameter. QC report includes following visualizations: End read counts distribution sample (boxplot_count) Relative log coverage (.e., end read count) sample (plot_rle) RNA fraction end read counts per sample (plot_count_fraction) Heatmap summarizing correlation matrix end read counts (plot_heatmap_corr) Correspondence analysis end read counts (plot_coa) Principal component analysis (plot_pca)","code":"report_qc(ribo = ribo_toy, library_col = \"run\")"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"batch-effect-identification","dir":"Articles","previous_headings":"Quality control","what":"Batch effect identification","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"Technical bias (.e., batch effect) can identified plotting C-scores genomic positions RNA sample PCA (see also [Visualization PCA] uses). example:  example, technical replicates RNA1 RNA2 included library 1 2 respectively, distant PC1 axis. Moreover, samples grouped library batch. following section resolve batch effect.","code":"plot_pca(ribo = ribo,          color_col = \"run\")"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"batch-effect-adjustment","dir":"Articles","previous_headings":"Quality control","what":"Batch effect adjustment","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"Batch effect RiboMethSeq data can adjusted using ComBat-seq method (Paraqindes et al, revision; Zhang, et al, 2020). rRMSAnalyzer package includes wrapper (adjust_bias) perform ComBat-seq adjustment provides new RiboClass adjusted read end count values C-scores automatically recalculated setup parameters. Batch effect adjustment can verified using plot_pca function new RiboClass:  batch effect adjustment using ComBat-seq method, two technical replicates RNA1 RNA2 show reduced dispersion, samples separated PCA axes independently library belong .","code":"ribo_adjusted <- adjust_bias(ribo, batch = \"run\") #> Found 2 batches #> Using null model in ComBat-seq. #> Adjusting for 0 covariate(s) or covariate level(s) #> Estimating dispersions #> Fitting the GLM model #> Shrinkage off - using GLM estimates for parameters #> Adjusting the data #> Recomputing c-score with the following parameters : #> - C-score method : median #> - Flanking window : 6 plot_pca(ribo_adjusted,\"run\")"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"verifying-local-coverage","dir":"Articles","previous_headings":"","what":"Verifying local coverage","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"C-score depends local coverage around site. simple visualization read end count coverage flanking region given genomic position interest, use plot_counts_env function. Two plotting methods available: display samples (default parameters): displaying end read count coverage samples using boxplot +6/-6 genomic position relative genomic position interest (green box). plot automatically used number samples x. median read end count shown dashed red line. example:  sample interest: displaying end read count coverage sample interest using profile +6/-6 genomic position relative genomic position interest (vertical green line). median read end count displayed horizontal dotted red line. example:","code":"data(\"ribo_toy\") plot_counts_env(ribo_adjusted,\"NR_046235.3_5.8S\",14) plot_counts_env(ribo_adjusted,\"NR_046235.3_5.8S\",14,c(\"S1\",\"S2\"))"},{"path":[]},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"keep-or-remove-samples","dir":"Articles","previous_headings":"Sample manipulation","what":"Keep or remove samples","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"sample subset can easily analyzed specifying samples keep remove. user can create new RiboClass object containing data metadata samples interest. cases, metadata remaining samples kept RiboClass object, manual updating required. example create new RiboClass retaining two samples interest (“S1” “S2”): example generate new RiboClass removing two samples (“S1” “S2”): cases, remaining samples’ metadata kept RiboClass object. need update manually.","code":"ribo_2samples <- keep_ribo_samples(ribo_adjusted,c(\"S1\",\"S2\")) print(ribo_2samples) #> a RiboClass with 2 samples and 4 RNA(s) : #> Name : NR_023363.1_5S, length : 121 #>  Name : NR_046235.3_5.8S, length : 157 #>  Name : NR_046235.3_18S, length : 1869 #>  Name : NR_046235.3_28S, length : 5070 ribo_removed_samples <- remove_ribo_samples(ribo,c(\"S1\",\"S1\")) print(ribo_removed_samples) #> a RiboClass with 13 samples and 4 RNA(s) : #> Name : NR_023363.1_5S, length : 121 #>  Name : NR_046235.3_5.8S, length : 157 #>  Name : NR_046235.3_18S, length : 1869 #>  Name : NR_046235.3_28S, length : 5070"},{"path":[]},{"path":[]},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"remove-rna","dir":"Articles","previous_headings":"RNA manipulation and annotation > RNA manipulation","what":"Remove RNA","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"subset RNA can easily analyzed specifying RNA removed. user can thus create new RiboClass object containing data RNAs interest, without affecting metadata samples. example RNA 5S removed:","code":"ribo_adjusted <- remove_rna(ribo, rna_to_remove = \"NR_023363.1_5S\") print(ribo_adjusted) #> a RiboClass with 14 samples and 3 RNA(s) : #> Name : NR_046235.3_5.8S, length : 157 #>  Name : NR_046235.3_18S, length : 1869 #>  Name : NR_046235.3_28S, length : 5070"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"rename-rna","dir":"Articles","previous_headings":"RNA manipulation and annotation > RNA manipulation","what":"Rename RNA","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"annotation rRNA 2’Ome sites using lists provided package requires use specific RNA names. example check RNA names provided user RiboClass match ones used package : example, names different need updated annotation. rename_rna function automatically updates rRNA names given rRNA size order:","code":"data(\"human_methylated\") cat(\"human_methylated's rna names: \", unique(human_methylated$rRNA),\"\\n\") #> human_methylated's rna names:  5.8S 18S 28S cat(\"ribo's rna names: \", as.character(ribo_adjusted$rna_names$current_name)) #> ribo's rna names:  NR_046235.3_5.8S NR_046235.3_18S NR_046235.3_28S ribo_adjusted <- rename_rna(ribo_adjusted,                             new_names = c(\"5.8S\", \"18S\", \"28S\"))                              # from the shortest RNA in our RiboClass to the longest."},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"annotation-of-rna-2ome-sites","dir":"Articles","previous_headings":"RNA manipulation and annotation","what":"Annotation of RNA 2’Ome sites","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"rRMSAnalyzer package calculates C-score genomic position RNAs. However, every sites reference 2’Ome RNA necessarily methylated. Therefore, expected user provides list potentially methylated sites interest, called “annotated sites”. make easier restrict analysis list sites.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"included-annotation-human-2ome-rrna-sites","dir":"Articles","previous_headings":"RNA manipulation and annotation > Annotation of RNA 2’Ome sites","what":"Included annotation : Human 2’Ome rRNA sites","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"default, rRMSAnalyzer package includes two dataframes containing positions annotations human rRNA 2’Ome sites: human_methylated: dataframe, containing 112 known 2’Ome sites human rRNAs. human_suspected: dataframe, containing 17 sites putative 2’Ome sites human rRNAs, described litterature.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"customize-2ome-sites-annotations","dir":"Articles","previous_headings":"RNA manipulation and annotation > Annotation of RNA 2’Ome sites","what":"Customize 2’Ome sites annotations","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"Instead using list human rRNA 2’Ome sites provided rRMSAnalyzer package, user can provide list annotated sites attached RiboClass object using annotate_site function (see 10.3 section : annotation RNA sites). annotate_site function expects “annot” parameter must dataframe object contains following three mandatory columns : RNA name: name RNA, matching RNA name RiboClass. Position RNA: number position RNA. Nomenclature: name given site interest. can see example :","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"annotate-sites","dir":"Articles","previous_headings":"RNA manipulation and annotation > Annotation of RNA 2’Ome sites","what":"Annotate RNA sites","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"2’Ome sites interest must attached RiboClass object analysis using annotate function either provided annotations custom annotations. example using included human methylated annotations: Note : rRMSAnalyzer display warning message mismatch annot RiboClass RNA names. vignette also provides explanations create sites annotation dataset Customize 2’Ome sites annotations.","code":"ribo_adjusted <- annotate_site(ribo_adjusted,                                annot = human_methylated,                                anno_rna = \"rRNA\",                                anno_pos = \"Position\",                                anno_value = \"Nomenclature\")"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"analytic-functions-for-2ome-profiling","dir":"Articles","previous_headings":"","what":"Analytic functions for 2’Ome profiling","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"determine whether RNA 2’Ome profiles different conditions identify variable RNA 2’Ome sites, several functions implemented obtain ggplot. Moreover, parameter only_annotated, included plot related functions, enables plotting annotated RNA 2’Ome sites interest (.e., biological relevance) set true. list implemented plots function name: principal component analysis using C-scores annotated RNA 2’Ome sites (plot_pca) heatmap using C-scores annotated RNA 2’Ome sites (plot_heatmap) boxplot using C-scores annotated RNA 2’Ome sites ascending order variability (boxplot_count) example, plot_pca function presented . example comparing samples reflecting different biological conditions based rRNA 2’Ome profile provided human_methylated list:  Note 1 : default, PC1 PC2 axes plotted. However, user can choose PCA axes interest using “axes” parameter.  Note 2 function returns complete dudi.pca object instead plot setting object_only TRUE:","code":"plot_pca(ribo_adjusted,          color_col = \"condition\",          only_annotated = TRUE) plot_pca(ribo_adjusted,          color_col = \"condition\",          axes = c(2,3), #PC2 and PC3 will be plotted          only_annotated = TRUE) pca <- plot_pca(ribo_adjusted,          color_col = \"condition\",          only_annotated = TRUE,          object_only = TRUE)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"analytic-functions-for-site-by-site-comparison-of-2ome-levels","dir":"Articles","previous_headings":"","what":"Analytic functions for site-by-site comparison of 2’Ome levels","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"Two cut-offs currently used identify RNA sites significantly different 2’Ome levelsè biological conditions (Marcel et al , NAR Cancer 2021): statistical significance: p-value < 0.01 using Kruskal-Wallis test. biological significance: ΔC-score (.e., Median C-scoremax – Median C-scoremin) > 0.05, indicating variation 5% RNA 2’Ome level conditions. plot_diff_sites function displays RNA sites meet two cut-criteria. produces boxplot visualizing median C-scores per biological condition p-value. example:","code":"plot_diff_sites(ribo_adjusted,factor_column = \"condition\") #> 0 significant sites found ! #Because no RNA site was found to fulfill the default cut-offs, the p-value cut-off is changed for the following example plot_diff_sites(ribo_adjusted,factor_column = \"condition\",p_cutoff = 0.1) #> 7 significant sites found !"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"exporting-data","dir":"Articles","previous_headings":"","what":"Exporting data","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"Data can exported two different objects.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"export-as-a-dataframe","dir":"Articles","previous_headings":"Exporting data","what":"Export as a dataframe","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"user can export data dataframe using extract_data function. default, C-scores genomic RNA positions exported. user can export data related subset annotated RNA 2’Ome sites setting only_annotated parameter TRUE. Excerpt output dataframe, S1, S2 S3 samples:","code":"ribo_df <- extract_data(ribo_adjusted,                         col = \"cscore\") ribo_df <- extract_data(ribo_adjusted,                         col = \"cscore\",                         only_annotated = TRUE)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"export-as-a-ggplot-ready-dataframe","dir":"Articles","previous_headings":"Exporting data","what":"Export as a ggplot-ready dataframe","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"user can export data ggplot-ready dataframe using format_to_plot function. default, C-scores genomic RNA positions exported. user can export additional information contained metadata specifying name column interest. user can export information related subset annotated RNA 2’Ome sites setting only_annotated parameter True. example ggplot-ready dataframe containing C-scores genomic RNA positions well condition related particular sample interest: Excerpt output ggplot-ready dataframe","code":"ggplot_table <- format_to_plot(ribo_adjusted,\"condition\")"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"export-as-a-dataframe-by-condition","dir":"Articles","previous_headings":"Exporting data","what":"Export as a dataframe by condition","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"mean_samples_by_condition function provdes summarized values per modality variable metadata dataframe. default, function provides genomic RNA positions name position, mean standard deviation (sd) C-scores. using value=”count” parameter, als possible calculate values read end counts. Calculations can limited annotated RNA 2’Ome sites setting only_annotated parameter TRUE. example dataframe showing summarized C-scores per modality “condition” variable genomic RNA positions: Excerpt output dataframe condition","code":"mean_tb <- mean_samples_by_conditon(ribo_adjusted,                                     value = \"cscore\",                                     metadata_condition = \"condition\",                                     only_annotated = TRUE)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/articles/rRMSAnalyzer.html","id":"sessioninfo","dir":"Articles","previous_headings":"","what":"Sessioninfo","title":"rRMSAnalyzer: package to analyze RiboMethSeq data","text":"","code":"sessionInfo() #> R version 4.3.1 (2023-06-16) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.2 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] rRMSAnalyzer_2.0.1 #>  #> loaded via a namespace (and not attached): #>   [1] ade4_1.7-22             tidyselect_1.2.0        dplyr_1.1.2             #>   [4] farver_2.1.1            blob_1.2.4              bitops_1.0-7            #>   [7] Biostrings_2.68.1       RCurl_1.98-1.12         fastmap_1.1.1           #>  [10] XML_3.99-0.14           digest_0.6.31           factoextra_1.0.7        #>  [13] lifecycle_1.0.3         survival_3.5-5          KEGGREST_1.40.0         #>  [16] RSQLite_2.3.1           magrittr_2.0.3          genefilter_1.82.1       #>  [19] compiler_4.3.1          rlang_1.1.1             sass_0.4.6              #>  [22] tools_4.3.1             utf8_1.2.3              yaml_2.3.7              #>  [25] knitr_1.43              ggsignif_0.6.4          labeling_0.4.2          #>  [28] bit_4.0.5               abind_1.4-5             BiocParallel_1.34.2     #>  [31] withr_2.5.0             purrr_1.0.1             BiocGenerics_0.46.0     #>  [34] desc_1.4.2              grid_4.3.1              stats4_4.3.1            #>  [37] fansi_1.0.4             ggpubr_0.6.0            xtable_1.8-4            #>  [40] colorspace_2.1-0        edgeR_3.42.4            ggplot2_3.4.2           #>  [43] scales_1.2.1            MASS_7.3-60             cli_3.6.1               #>  [46] crayon_1.5.2            rmarkdown_2.22          ragg_1.2.5              #>  [49] generics_0.1.3          httr_1.4.6              DBI_1.1.3               #>  [52] cachem_1.0.8            stringr_1.5.0           splines_4.3.1           #>  [55] zlibbioc_1.46.0         parallel_4.3.1          AnnotationDbi_1.62.1    #>  [58] XVector_0.40.0          matrixStats_1.0.0       vctrs_0.6.3             #>  [61] Matrix_1.5-4.1          jsonlite_1.8.5          sva_3.48.0              #>  [64] carData_3.0-5           car_3.1-2               IRanges_2.34.0          #>  [67] S4Vectors_0.38.1        bit64_4.0.5             rstatix_0.7.2           #>  [70] ggrepel_0.9.3           systemfonts_1.0.4       locfit_1.5-9.8          #>  [73] limma_3.56.2            tidyr_1.3.0             jquerylib_0.1.4         #>  [76] annotate_1.78.0         glue_1.6.2              pkgdown_2.0.7           #>  [79] codetools_0.2-19        stringi_1.7.12          gtable_0.3.3            #>  [82] GenomeInfoDb_1.36.0     munsell_0.5.0           tibble_3.2.1            #>  [85] pillar_1.9.0            htmltools_0.5.5         GenomeInfoDbData_1.2.10 #>  [88] R6_2.5.1                textshaping_0.3.6       rprojroot_2.0.3         #>  [91] lattice_0.21-8          evaluate_0.21           Biobase_2.60.0          #>  [94] highr_0.10              png_0.1-8               backports_1.4.1         #>  [97] memoise_2.0.1           broom_1.0.5             bslib_0.5.0             #> [100] Rcpp_1.0.10             nlme_3.1-162            mgcv_1.8-42             #> [103] xfun_0.39               fs_1.6.2                MatrixGenerics_1.12.2   #> [106] pkgconfig_2.0.3"},{"path":[]},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Théo Combe. Author, maintainer. Hermes Paraqindes. Author. Janice Kielbassa. Author. Virginie Marcel. Author. Émilie Thomas. Author. Anthony Ferrari. Author. Fondation Synergie Lyon Cancer. Funder. INCA. Funder. SIRIC program. Funder. LabEX program. Funder. Ligue Nationale Contre le Cancer. Funder. Centre de Recherche en Cancérologie de Lyon. Copyright holder.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Combe T, Paraqindes H, Kielbassa J, Marcel V, Thomas É, Ferrari (2023). rRMSAnalyzer: Package Analyze RiboMethSeq Data. https://github.com/RibosomeCRCL/rRMSAnalyzer, https://ribosomecrcl.github.io/rRMSAnalyzer/.","code":"@Manual{,   title = {rRMSAnalyzer: Package to Analyze RiboMethSeq Data},   author = {Théo Combe and Hermes Paraqindes and Janice Kielbassa and Virginie Marcel and Émilie Thomas and Anthony Ferrari},   year = {2023},   note = {https://github.com/RibosomeCRCL/rRMSAnalyzer, https://ribosomecrcl.github.io/rRMSAnalyzer/}, }"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/index.html","id":"rrmsanalyzer-package-to-analyze-ribomethseq-data","dir":"","previous_headings":"","what":"Package to Analyze RiboMethSeq Data","title":"Package to Analyze RiboMethSeq Data","text":"RiboMethSeq RNAseq-based approach analyze 2’O-ribose methylation (2’Ome). rRMSAnalyzer R package provides set easy--use functions evaluate 2’Ome levels computing C-scores RiboMethSeq read end counts input. Available features (version 2): C-score computation (using either mean median window neighboring positions) Batch effect adjustment CombatSeq Different visualizations compare samples sites Include table annotated human rRNA sites Export computed C-scores dataframe Semi-automated quality control report Note also developed dedicated Nextflow pipeline process data sequencing output (fastq files) useful raw data rRMSAnalyzer (read end counts).","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Package to Analyze RiboMethSeq Data","text":"latest version rRMSAnalyzer package can installed Github :","code":"library(devtools) devtools::install_github(\"RibosomeCRCL/rRMSAnalyzer\")"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Package to Analyze RiboMethSeq Data","text":"","code":"library(rRMSAnalyzer)  ribo <- load_ribodata(               count_path = \"/path/to/your/csvfiles/directory/\",               metadata = \"path/to/metadata.csv\",               metadata_key = \"filename\",               metadata_id = \"samplename\")  # Compute the c-score using different parameters, # including calculation of the local coverage using the mean instead of the median ribo <- compute_cscore(ribo, method = \"mean\")  # If necessary, adjust any technical biases using ComBat-Seq. # Here, as an example, we use the \"library\" column in metadata. ribo <- adjust_bias(ribo,\"library\")  # Plot a Principal Component Analysis (PCA) whose colors depend on the \"condition\" column in metadata plot_pca(ribo,\"condition\")"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Package to Analyze RiboMethSeq Data","text":"“getting started” available website: https://ribosomecrcl.github.io/rRMSAnalyzer/ test dataset (ribo_toy) included package.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/index.html","id":"help-bug-reports-and-suggestions","dir":"","previous_headings":"","what":"Help, bug reports and suggestions","title":"Package to Analyze RiboMethSeq Data","text":"report bug suggestion improve package, please let us known opening new issue : https://github.com/RibosomeCRCL/rRMSAnalyzer/issues","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Package to Analyze RiboMethSeq Data","text":"like thank collaborators Jean-Jacques Diaz Team Bioinformatic Platform Gilles Thomas advices suggestions.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Package to Analyze RiboMethSeq Data","text":"project funded French Cancer Institute (INCa, PLBIO 2019-138 MARACAS), SIRIC Program (INCa-DGOS-Inserm_12563 LyRICAN), LabEX program (DEVweCan), French association Ligue Nationale Contre le Cancer Synergie Lyon Cancer Foundation.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/adjust_bias.html","id":null,"dir":"Reference","previous_headings":"","what":"Correct batch effect with ComBat-seq method — adjust_bias","title":"Correct batch effect with ComBat-seq method — adjust_bias","text":"Batch effect RiboMethSeq data can adjusted using ComBat-seq method. adjust_bias wrapper perform ComBat-seq adjustment. return new RiboClass adjusted read end count values C-scores automatically recomputed setup parameters.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/adjust_bias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correct batch effect with ComBat-seq method — adjust_bias","text":"","code":"adjust_bias(ribo, batch, ncores = 1, ...)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/adjust_bias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correct batch effect with ComBat-seq method — adjust_bias","text":"ribo RiboClass object. batch Name column metadata contains batch number. ncores Number cores use case multithreading. ... Parameters pass sva's ComBat_seq function.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/adjust_bias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correct batch effect with ComBat-seq method — adjust_bias","text":"RiboClass adjusted read end count values automatically recomputed C-scores.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/adjust_bias.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Correct batch effect with ComBat-seq method — adjust_bias","text":"must column batch number sample RiboClass’s metadata.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/adjust_bias.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Correct batch effect with ComBat-seq method — adjust_bias","text":"Yuqing Zhang, Giovanni Parmigiani, W Evan Johnson, ComBat-seq: batch effect adjustment RNA-seq count data, NAR Genomics Bioinformatics, Volume 2, Issue 3, 1 September 2020, lqaa078, https://doi.org/10.1093/nargab/lqaa078","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/adjust_bias.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correct batch effect with ComBat-seq method — adjust_bias","text":"","code":"data('ribo_toy') ribo_toy_two <- keep_ribo_samples(ribo_toy,c('S1','RNA1','S7','RNA2')) ribo_toy_adjusted <- adjust_bias(ribo_toy_two,'run')  #> Found 2 batches #> Using null model in ComBat-seq. #> Adjusting for 0 covariate(s) or covariate level(s) #> Estimating dispersions #> Fitting the GLM model #> Shrinkage off - using GLM estimates for parameters #> Adjusting the data #> Recomputing c-score with the following parameters : #> - C-score method : median #> - Flanking window : 6"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/annotate_site.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate sites according to a dataframe containing annotation — annotate_site","title":"Annotate sites according to a dataframe containing annotation — annotate_site","text":"Annotate sites interest giving custom name.  analyses plots can applied specific sites only_annotated parameter  available.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/annotate_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate sites according to a dataframe containing annotation — annotate_site","text":"","code":"annotate_site(ribo, annot, anno_rna = 2, anno_pos = 1, anno_value = 3)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/annotate_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate sites according to a dataframe containing annotation — annotate_site","text":"ribo RiboClass object annotate, see :  load_ribodata annot dataframe containing annotations. anno_rna Name index column annot containing RNAs' name. anno_pos Name index column annot containing site position inside RNA. anno_value Name index column annot containing nomenclature apply.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/annotate_site.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate sites according to a dataframe containing annotation — annotate_site","text":"annotated RiboClass (site column data filled names annot_value known position).","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/annotate_site.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Annotate sites according to a dataframe containing annotation — annotate_site","text":"function fill 'site' column RiboClass's data nomenclature given annot.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/annotate_site.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate sites according to a dataframe containing annotation — annotate_site","text":"","code":"data('ribo_toy') data('human_methylated') ribo_toy <- rename_rna(ribo_toy ,c('5S','5.8S','18S','28S')) ribo_toy <- annotate_site(ribo_toy,human_methylated,anno_value ='Nomenclature')"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/boxplot_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a boxplot of a RiboClass object’s counts. — boxplot_count","title":"Plot a boxplot of a RiboClass object’s counts. — boxplot_count","text":"plot useful check samples alike raw counts.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/boxplot_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a boxplot of a RiboClass object’s counts. — boxplot_count","text":"","code":"boxplot_count(ribo, color_col = NA, outlier = TRUE, horizontal = FALSE)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/boxplot_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a boxplot of a RiboClass object’s counts. — boxplot_count","text":"ribo RiboClass object. color_col Name column metadata used coloring samples. outlier Show boxplot outlier values. horizontal Show boxplot horizontally.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/boxplot_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a boxplot of a RiboClass object’s counts. — boxplot_count","text":"ggplot object.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/boxplot_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a boxplot of a RiboClass object’s counts. — boxplot_count","text":"","code":"data(\"ribo_toy\") boxplot_count(ribo_toy,\"run\") #> Warning: Removed 499 rows containing non-finite values (`stat_boxplot()`)."},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/boxplot_cscores.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot boxplot representing the C-score values of all samples for each\nindividual annotated site.\nSites are sorted by their median. — boxplot_cscores","title":"Plot boxplot representing the C-score values of all samples for each\nindividual annotated site.\nSites are sorted by their median. — boxplot_cscores","text":"Plot boxplot representing C-score values samples individual annotated site. Sites sorted median.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/boxplot_cscores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot boxplot representing the C-score values of all samples for each\nindividual annotated site.\nSites are sorted by their median. — boxplot_cscores","text":"","code":"boxplot_cscores(   ribo,   outlier = TRUE,   sort_by = c(\"median\", \"iqr\", \"var\")[1],   horizontal = FALSE )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/boxplot_cscores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot boxplot representing the C-score values of all samples for each\nindividual annotated site.\nSites are sorted by their median. — boxplot_cscores","text":"ribo RiboClass object. outlier Show boxplot outlier values. sort_by Sort sites median (\"median\", default) variance (\"var\") IQR (\"iqr\"). horizontal Show boxplot horizontally.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/boxplot_cscores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot boxplot representing the C-score values of all samples for each\nindividual annotated site.\nSites are sorted by their median. — boxplot_cscores","text":"ggplot geom_boxplot","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/boxplot_cscores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot boxplot representing the C-score values of all samples for each\nindividual annotated site.\nSites are sorted by their median. — boxplot_cscores","text":"","code":"data(\"ribo_toy\") data(\"human_methylated\") ribo_toy <- rename_rna(ribo_toy) ribo_toy <- annotate_site(ribo_toy,human_methylated) boxplot_cscores(ribo_toy)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/check_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a vector of strings correspond to valid metadata in a given RiboClass — check_metadata","title":"Check if a vector of strings correspond to valid metadata in a given RiboClass — check_metadata","text":"function returns nothing string matches metadata. stop display formatted error message one strings vector valid metadata.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/check_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a vector of strings correspond to valid metadata in a given RiboClass — check_metadata","text":"","code":"check_metadata(ribo, metadata_name)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/check_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a vector of strings correspond to valid metadata in a given RiboClass — check_metadata","text":"ribo RiboClass. metadata_name vector string check ribo's metadata.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/check_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a vector of strings correspond to valid samplenames in a given RiboClass — check_sample","title":"Check if a vector of strings correspond to valid samplenames in a given RiboClass — check_sample","text":"function returns nothing string matches samplenames stop display formatted error message one strings vector valid samplenames","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/check_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a vector of strings correspond to valid samplenames in a given RiboClass — check_sample","text":"","code":"check_sample(ribo, sample_names)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/check_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a vector of strings correspond to valid samplenames in a given RiboClass — check_sample","text":"ribo RiboClass. sample_names vector string check ribo's samplenames","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/compute_cscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute c-score for all samples in a riboclass — compute_cscore","title":"Compute c-score for all samples in a riboclass — compute_cscore","text":"package, C-score calculated every position. can useful find positions yet identified methylated. function called automatically loading data adjusting biases end read count data ComBat-seq. can still called manually modify C-score currently computed. RNA, first last positions calculated local coverage shorter flanking argument. value NA instead.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/compute_cscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute c-score for all samples in a riboclass — compute_cscore","text":"","code":"compute_cscore(ribo = NULL, flanking = 6, method = \"median\", ncores = 1)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/compute_cscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute c-score for all samples in a riboclass — compute_cscore","text":"ribo RiboClass object. flanking Size local coverage. method Computation method local coverage. Either 'median' 'mean'. ncores Number cores use case multithreading.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/compute_cscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute c-score for all samples in a riboclass — compute_cscore","text":"RiboClass c-score columns appended sample's data.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/compute_cscore.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute c-score for all samples in a riboclass — compute_cscore","text":"Birkedal, U., Christensen-Dalsgaard, M., Krogh, N., Sabarinathan, R., Gorodkin, J. Nielsen, H. (2015), Profiling Ribose Methylations RNA High-Throughput Sequencing. Angew. Chem. Int. Ed., 54: 451-455. https://doi.org/10.1002/anie.201408362","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/compute_cscore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute c-score for all samples in a riboclass — compute_cscore","text":"","code":"data('ribo_toy') ribo_subsetted <- keep_ribo_samples(ribo_toy,'S1') ribo_with_cscore_med <- compute_cscore(ribo_subsetted, ncores = 2) ribo_with_cscore_mean <- compute_cscore(ribo_subsetted, method = 'mean', ncores = 2)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-calculate_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute PCA from a c-score matrix — .calculate_pca","title":"Compute PCA from a c-score matrix — .calculate_pca","text":"Compute PCA c-score matrix","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-calculate_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute PCA from a c-score matrix — .calculate_pca","text":"","code":".calculate_pca(cscore.matrix = NULL)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-calculate_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute PCA from a c-score matrix — .calculate_pca","text":"cscore.matrix matrix c-score extracted RiboClass ' extract_data","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-calculate_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute PCA from a c-score matrix — .calculate_pca","text":"dudi.pca object","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-compute_RLE.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Relative Log Expression (RLE) — .compute_RLE","title":"Compute Relative Log Expression (RLE) — .compute_RLE","text":"Compute Relative Log Expression (RLE)","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-compute_RLE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Relative Log Expression (RLE) — .compute_RLE","text":"","code":".compute_RLE(mat = NULL)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-compute_RLE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Relative Log Expression (RLE) — .compute_RLE","text":"mat Data matrix compute RLE ","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-compute_RLE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Relative Log Expression (RLE) — .compute_RLE","text":"RLE matrix","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-compute_coa.html","id":null,"dir":"Reference","previous_headings":"","what":"(internal) Correspondence Analysis computation function — .compute_coa","title":"(internal) Correspondence Analysis computation function — .compute_coa","text":"(internal) Correspondence Analysis computation function","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-compute_coa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(internal) Correspondence Analysis computation function — .compute_coa","text":"","code":".compute_coa(raw_counts = NULL)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-compute_coa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(internal) Correspondence Analysis computation function — .compute_coa","text":"raw_counts matrix counts, exported extract_data()","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-compute_coa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(internal) Correspondence Analysis computation function — .compute_coa","text":"coa object","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_boxplot_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"(internal) plot boxplot for a given matrix of values — .plot_boxplot_samples","title":"(internal) plot boxplot for a given matrix of values — .plot_boxplot_samples","text":"(internal) plot boxplot given matrix values","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_boxplot_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(internal) plot boxplot for a given matrix of values — .plot_boxplot_samples","text":"","code":".plot_boxplot_samples(   matrix,   values_col_name,   metadata,   color_col = NA,   outlier,   horizontal )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_boxplot_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(internal) plot boxplot for a given matrix of values — .plot_boxplot_samples","text":"matrix Sites x Samples C-score/count matrix (output extract_data()). values_col_name Name column containing value (either count cscore). metadata Metadata samples matrix. color_col Name column metadata used coloring samples. outlier Show boxplot outlier values. horizontal Show boxplot horizontally.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_boxplot_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(internal) plot boxplot for a given matrix of values — .plot_boxplot_samples","text":"ggplot boxplot","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_boxplot_sites.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function for boxplot_cscore — .plot_boxplot_sites","title":"Internal function for boxplot_cscore — .plot_boxplot_sites","text":"Internal function boxplot_cscore","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_boxplot_sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function for boxplot_cscore — .plot_boxplot_sites","text":"","code":".plot_boxplot_sites(matrix, values_to_plot, outlier, sort_by, horizontal)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_boxplot_sites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function for boxplot_cscore — .plot_boxplot_sites","text":"matrix Sites x Samples C-score/count matrix (output extract_data()). values_to_plot Value display plot. outlier Show boxplot outlier values. horizontal Show boxplot horizontally.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_boxplot_sites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function for boxplot_cscore — .plot_boxplot_sites","text":"ggplot object.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_coa.html","id":null,"dir":"Reference","previous_headings":"","what":"(internal) Plot a coa object — .plot_coa","title":"(internal) Plot a coa object — .plot_coa","text":"(internal) Plot coa object","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_coa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(internal) Plot a coa object — .plot_coa","text":"","code":".plot_coa(   dudi.coa = NULL,   metadata = NULL,   color_col = NULL,   axes = c(1, 2),   title = \"default\",   subtitle = \"default\" )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_coa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(internal) Plot a coa object — .plot_coa","text":"dudi.coa coa object metadata RiboClass's metadata dataframe color_col Name column metadata used coloring samples. axes Two-element vector indicating pair COA components show. title Title display plot. 'default' default title. subtitle Subtitle display plot. 'samples' number samples. 'none' subtitle.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_coa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(internal) Plot a coa object — .plot_coa","text":"ggplot object containing COA","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to plot heatmap. — .plot_heatmap","title":"Internal function to plot heatmap. — .plot_heatmap","text":"Internal function plot heatmap.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to plot heatmap. — .plot_heatmap","text":"","code":".plot_heatmap(   cscore_matrix = NULL,   metadata = NULL,   color_col = NULL,   most_variant = FALSE,   title = \"default\",   cutree_rows,   cutree_cols,   ... )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to plot heatmap. — .plot_heatmap","text":"cscore_matrix Sites x Samples C-score matrix (output extract_data()). metadata metadata samples cscore_matrix color_col Vector metadata columns’ name used coloring samples. most_variant select variant positions (used plot_heatmap()) title Title display plot. \"default\" default title. cutree_rows number clusters rows divided , based hierarchical clustering (using cutree). cutree_cols number clusters columns divided , based hierarchical clustering (using cutree). ... Pheatmap’s parameters","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to plot heatmap. — .plot_heatmap","text":"ComplexHeatmap heatmap","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_heatmap_corr.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function of plot_heatmap_corr. — .plot_heatmap_corr","title":"Internal function of plot_heatmap_corr. — .plot_heatmap_corr","text":"Internal function plot_heatmap_corr.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_heatmap_corr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function of plot_heatmap_corr. — .plot_heatmap_corr","text":"","code":".plot_heatmap_corr(cscore_matrix, metadata, color_col)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_heatmap_corr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function of plot_heatmap_corr. — .plot_heatmap_corr","text":"cscore_matrix Sites x Samples C-score matrix (output extract_data()). metadata Metadata samples matrix color_col Vector metadata columns’ name used coloring samples.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_heatmap_corr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function of plot_heatmap_corr. — .plot_heatmap_corr","text":"ComplexHeatmap heatmap","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a dudi.pca object using factoextra — .plot_pca","title":"Plot a dudi.pca object using factoextra — .plot_pca","text":"Plot dudi.pca object using factoextra","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a dudi.pca object using factoextra — .plot_pca","text":"","code":".plot_pca(   dudi.pca = NULL,   metadata = NULL,   color_col = NULL,   axes = axes,   title = \"default\",   subtitle = \"samples\" )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a dudi.pca object using factoextra — .plot_pca","text":"dudi.pca dudi.pca object generated Ade4 metadata metadata table RiboClass color_col Name column metadata used coloring samples. axes Two-element vector indicating pair principal components  show. title Title display plot. 'default' default title. subtitle Subtitle display plot. 'samples' number samples. 'none' subtitle.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a dudi.pca object using factoextra — .plot_pca","text":"ggplot","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_rle.html","id":null,"dir":"Reference","previous_headings":"","what":"(internal) Compute and plot Relative Log Expression for a chosen data in as RiboClass — .plot_rle","title":"(internal) Compute and plot Relative Log Expression for a chosen data in as RiboClass — .plot_rle","text":"(internal) Compute plot Relative Log Expression chosen data RiboClass","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_rle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(internal) Compute and plot Relative Log Expression for a chosen data in as RiboClass — .plot_rle","text":"","code":".plot_rle(mat = NULL, show_outlier, col_to_plot)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_rle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(internal) Compute and plot Relative Log Expression for a chosen data in as RiboClass — .plot_rle","text":"mat matrix show_outlier Show outliers plot ? col_to_plot data column plot values ","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-plot_rle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(internal) Compute and plot Relative Log Expression for a chosen data in as RiboClass — .plot_rle","text":"ggplot object","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-read_count_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Import and transform a list of count files for a RiboClass — .read_count_files","title":"Import and transform a list of count files for a RiboClass — .read_count_files","text":"internal function used generate \"data\" part RiboClass. read CSV files turn list dataframes.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-read_count_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import and transform a list of count files for a RiboClass — .read_count_files","text":"","code":".read_count_files(   path_to_files,   sep,   header,   rna_col,   position_col,   count_value,   metadata_filenames = NULL )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-read_count_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import and transform a list of count files for a RiboClass — .read_count_files","text":"path_to_files path folder containing count files sep CSV seperator header files contain header ? rna_col position column containing RNA name position_col position column containing genomic position count_value position column contaning count given genomic position metadata_filenames Filenames metadata check ","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-read_count_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import and transform a list of count files for a RiboClass — .read_count_files","text":"list sample dataframes","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-update_ribo_count_with_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Update count values inside a RiboClass with a matrix of values — .update_ribo_count_with_matrix","title":"Update count values inside a RiboClass with a matrix of values — .update_ribo_count_with_matrix","text":"Update count values inside RiboClass matrix values","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-update_ribo_count_with_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update count values inside a RiboClass with a matrix of values — .update_ribo_count_with_matrix","text":"","code":".update_ribo_count_with_matrix(ribo, update_matrix)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-update_ribo_count_with_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update count values inside a RiboClass with a matrix of values — .update_ribo_count_with_matrix","text":"ribo RiboClass object update_matrix position x sample matrix containing new values","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/dot-update_ribo_count_with_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update count values inside a RiboClass with a matrix of values — .update_ribo_count_with_matrix","text":"RiboClass updated values","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/extract_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate results into a single matrix — extract_data","title":"Aggregate results into a single matrix — extract_data","text":"given column data, function generate dataframe samples. Exports positions (only_annotated false) annotated positions (only_annotated true).","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/extract_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate results into a single matrix — extract_data","text":"","code":"extract_data(   ribo,   col = \"cscore\",   position_to_rownames = FALSE,   only_annotated = FALSE )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/extract_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate results into a single matrix — extract_data","text":"ribo RiboClass object. col Column data want extract data (cscore count). position_to_rownames true, position included rowname.  new column otherwise. only_annotated true, return dataframe annotated sites. Return sites otherwise.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/extract_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate results into a single matrix — extract_data","text":"position x samples dataframe. Position can annotated sites. site column can added position_to_rownames = FALSE.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/extract_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate results into a single matrix — extract_data","text":"","code":"data('ribo_toy') count_df <- extract_data(ribo_toy,'count')"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/format_to_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform RiboClass data to a ","title":"Transform RiboClass data to a ","text":"Turn RiboClass dataframe ready used ggplot. Metadata columns can added extra informations needed.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/format_to_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform RiboClass data to a ","text":"","code":"format_to_plot(ribo, metadata_col = NULL, only_annotated = FALSE)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/format_to_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform RiboClass data to a ","text":"ribo RiboClass object. metadata_col Metadata columns add. Must RiboClass' metadata. only_annotated Keep sites annotated.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/format_to_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform RiboClass data to a ","text":"ggplot-friendly dataframe following columns : 1) site; 2) sample; 3) cscore; ...) metadata added","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/generate_metadata_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a metadata dataframe, given a path. — generate_metadata_df","title":"Generate a metadata dataframe, given a path. — generate_metadata_df","text":"Generate \"empty\" dataframe required filename samplename columns include riboclass. Names samplename column can modified, long sample unique name. filename column modified, unless filenames disk changed. Otherwise, prevent new_riboclass linking data metadata...","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/generate_metadata_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a metadata dataframe, given a path. — generate_metadata_df","text":"","code":"generate_metadata_df(counts_folder_path, create_samplename_col = TRUE)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/generate_metadata_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a metadata dataframe, given a path. — generate_metadata_df","text":"counts_folder_path path count files stored. create_samplename_col Generate sample name col filename default","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/get_IQR.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute IQR or variance for 2'Ome sites — get_IQR","title":"Compute IQR or variance for 2'Ome sites — get_IQR","text":"Compute IQR variance 2'Ome sites","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/get_IQR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute IQR or variance for 2'Ome sites — get_IQR","text":"","code":"get_IQR(df = NULL, order = \"IQR\")"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/get_IQR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute IQR or variance for 2'Ome sites — get_IQR","text":"df dataframe order athe type variance computed. var iqr.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/get_IQR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute IQR or variance for 2'Ome sites — get_IQR","text":"ggplot data frame Cscore, Site, IQR var value sample ID","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/get_IQR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute IQR or variance for 2'Ome sites — get_IQR","text":"","code":"data(\"ribo_toy\") ribo_matrix <- extract_data(ribo_toy,position_to_rownames = TRUE) ribo_matrix <- na.omit(ribo_matrix) IQR_df <- get_IQR(ribo_matrix)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/get_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Get annotation of a RiboClass — get_annotation","title":"Get annotation of a RiboClass — get_annotation","text":"Get annotation RiboClass","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/get_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get annotation of a RiboClass — get_annotation","text":"","code":"get_annotation(ribo)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/get_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get annotation of a RiboClass — get_annotation","text":"ribo RiboClass","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/get_annotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get annotation of a RiboClass — get_annotation","text":"dataframe rna name, position rna annotated site.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/get_annotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get annotation of a RiboClass — get_annotation","text":"","code":"data(\"ribo_toy\") data(\"human_methylated\") ribo_toy <- rename_rna(ribo_toy) ribo_toy <- annotate_site(ribo_toy,human_methylated) get_annotation(ribo_toy) #>     rnapos  rna       site #> 1       28  18S   18S_Am27 #> 2      100  18S   18S_Am99 #> 3      117  18S  18S_Um116 #> 4      122  18S  18S_Um121 #> 5      160  18S  18S_Am159 #> 6      167  18S  18S_Am166 #> 7      173  18S  18S_Um172 #> 8      175  18S  18S_Cm174 #> 9      355  18S  18S_Um354 #> 10     429  18S  18S_Um428 #> 11     437  18S  18S_Gm436 #> 12     463  18S  18S_Cm462 #> 13     469  18S  18S_Am468 #> 14     485  18S  18S_Am484 #> 15     510  18S  18S_Gm509 #> 16     513  18S  18S_Am512 #> 17     518  18S  18S_Cm517 #> 18     577  18S  18S_Am576 #> 19     591  18S  18S_Am590 #> 20     602  18S  18S_Gm601 #> 21     622  18S  18S_Cm621 #> 22     628  18S  18S_Um627 #> 23     645  18S  18S_Gm644 #> 24     669  18S  18S_Am668 #> 25     684  18S  18S_Gm683 #> 26     798  18S  18S_Cm797 #> 27     800  18S  18S_Um799 #> 28     868  18S  18S_Gm867 #> 29    1032  18S 18S_Am1031 #> 30    1273  18S 18S_Cm1272 #> 31    1289  18S 18S_Um1288 #> 32    1327  18S 18S_Um1326 #> 33    1329  18S 18S_Gm1328 #> 34    1384  18S 18S_Am1383 #> 35    1392  18S 18S_Cm1391 #> 36    1443  18S 18S_Um1442 #> 37    1448  18S 18S_Gm1447 #> 38    1491  18S 18S_Gm1490 #> 39    1669  18S 18S_Um1668 #> 40    1679  18S 18S_Am1678 #> 41    1704  18S 18S_Cm1703 #> 42    1805  18S 18S_Um1804 #> 43     399  28S  28S_Am389 #> 44     401  28S  28S_Am391 #> 45    1317  28S 28S_Gm1303 #> 46    1324  28S 28S_Am1310 #> 47    1327  28S 28S_Am1313 #> 48    1341  28S 28S_Cm1327 #> 49    1523  28S 28S_Gm1509 #> 50    1525  28S 28S_Am1511 #> 51    1535  28S 28S_Am1521 #> 52    1626  28S 28S_Gm1612 #> 53    1761  28S 28S_Gm1747 #> 54    1774  28S 28S_Um1760 #> 55    1872  28S 28S_Am1858 #> 56    1882  28S 28S_Cm1868 #> 57    2352  28S 28S_Cm2338 #> 58    2364  28S 28S_Am2350 #> 59    2365  28S 28S_Gm2351 #> 60    2366  28S 28S_Cm2352 #> 61    2402  28S 28S_Am2388 #> 62    2416  28S 28S_Um2402 #> 63    2423  28S 28S_Cm2409 #> 64    2425  28S 28S_Gm2411 #> 65    2788  28S 28S_Am2774 #> 66    2805  28S 28S_Cm2791 #> 67    2816  28S 28S_Am2802 #> 68    2825  28S 28S_Cm2811 #> 69    2838  28S 28S_Um2824 #> 70    2862  28S 28S_Cm2848 #> 71    2877  28S 28S_Gm2863 #> 72    3628  28S 28S_Gm3606 #> 73    3702  28S 28S_Cm3680 #> 74    3719  28S 28S_Am3697 #> 75    3725  28S 28S_Am3703 #> 76    3745  28S 28S_Gm3723 #> 77    3761  28S 28S_Am3739 #> 78    3786  28S 28S_Am3764 #> 79    3793  28S 28S_Gm3771 #> 80    3809  28S 28S_Cm3787 #> 81    3819  28S 28S_Um3797 #> 82    3826  28S 28S_Am3804 #> 83    3831  28S 28S_Am3809 #> 84    3842  28S 28S_Cm3820 #> 85    3868  28S 28S_Am3846 #> 86    3870  28S 28S_Cm3848 #> 87    3888  28S 28S_Cm3866 #> 88    3900  28S 28S_Gm3878 #> 89    3926  28S 28S_Um3904 #> 90    3945  28S 28S_Gm3923 #> 91    4043  28S 28S_Gm4020 #> 92    4055  28S 28S_Cm4032 #> 93    4197  28S 28S_Gm4166 #> 94    4228  28S 28S_Um4197 #> 95    4229  28S 28S_Gm4198 #> 96    4307  28S 28S_Um4276 #> 97    4371  28S 28S_Gm4340 #> 98    4393  28S 28S_Gm4362 #> 99    4457  28S 28S_Cm4426 #> 100   4495  28S 28S_Gm4464 #> 101   4499  28S 28S_Um4468 #> 102   4500  28S 28S_Gm4469 #> 103   4524  28S 28S_Am4493 #> 104   4537  28S 28S_Cm4506 #> 105   4572  28S 28S_Am4541 #> 106   4591  28S 28S_Am4560 #> 107   4619  28S 28S_Gm4588 #> 108   4621  28S 28S_Um4590 #> 109   4624  28S 28S_Gm4593 #> 110   4638  28S 28S_Gm4607 #> 111     15 5.8S  5.8S_Um14 #> 112     76 5.8S  5.8S_Gm75"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/get_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the range between conditions' mean — get_range","title":"Return the range between conditions' mean — get_range","text":"Return range conditions' mean","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/get_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the range between conditions' mean — get_range","text":"","code":"get_range(cscore_matrix = NULL, metadata = NULL, factor_column = NULL)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/get_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the range between conditions' mean — get_range","text":"cscore_matrix Sites x Samples C-score matrix (output extract_data()). metadata Metadata associated samples c-score matrix. factor_column Metadata column used group samples .","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/get_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the range between conditions' mean — get_range","text":"dataframe 1) annotated site name 2) range mean conditions site.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/get_variant_sites.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the most/less variant sites of a dataframe or a RiboClass — get_variant_sites","title":"Return the most/less variant sites of a dataframe or a RiboClass — get_variant_sites","text":"Return /less variant sites dataframe RiboClass","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/get_variant_sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the most/less variant sites of a dataframe or a RiboClass — get_variant_sites","text":"","code":"get_variant_sites(   ribo,   n = 20,   type_of_variant = \"most\",   only_annotated = TRUE )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/get_variant_sites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the most/less variant sites of a dataframe or a RiboClass — get_variant_sites","text":"ribo RiboClass object. n Number top sites return. type_of_variant Either \"less\" \"\", select top n less variant sites top n variant sites respectively. only_annotated (RiboClass ) Check variability among annotated sites. Ignored df dataframe.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/get_variant_sites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the most/less variant sites of a dataframe or a RiboClass — get_variant_sites","text":"dataframe n /less variant sites","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/human_methylated.html","id":null,"dir":"Reference","previous_headings":"","what":"Known 2'Ome positions in Humans' rRNA — human_methylated","title":"Known 2'Ome positions in Humans' rRNA — human_methylated","text":"dataset containing 112 2'Ome positions associated data","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/human_methylated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Known 2'Ome positions in Humans' rRNA — human_methylated","text":"","code":"data(human_methylated)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/human_methylated.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Known 2'Ome positions in Humans' rRNA — human_methylated","text":"data frame 112 rows 10 variables: Position nucleotide position rRNA rRNA rRNA methylation found Nomenclature name given modification NR_046235.Numbering Position Sequence nucleotides sequence surround position SNORD ID associated snoRNA Mode..coding SNORD coded SNORD.host.gene SNORD's host gene Ensembl SNORD's Ensembl reference Nucleotide nucleotide present position (,T,G C)","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/human_suspected.html","id":null,"dir":"Reference","previous_headings":"","what":"Suspected 2'Ome positions in Humans' rRNA — human_suspected","title":"Suspected 2'Ome positions in Humans' rRNA — human_suspected","text":"dataset containing 17 2'Ome positions associated data","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/human_suspected.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suspected 2'Ome positions in Humans' rRNA — human_suspected","text":"","code":"data(human_suspected)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/human_suspected.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Suspected 2'Ome positions in Humans' rRNA — human_suspected","text":"data frame 17 rows 10 variables: Position nucleotide position rRNA rRNA rRNA methylation found Nomenclature name given modification NR_046235.Numbering Position Sequence nucleotides sequence surround position SNORD ID associated snoRNA Mode..coding SNORD coded SNORD.host.gene SNORD's host gene Ensembl SNORD's Ensembl reference Nucleotide nucleotide present position (,T,G C)","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/keep_ribo_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep only selected samples from a RiboClass Object. — keep_ribo_samples","title":"Keep only selected samples from a RiboClass Object. — keep_ribo_samples","text":"Keep selected samples RiboClass Object.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/keep_ribo_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep only selected samples from a RiboClass Object. — keep_ribo_samples","text":"","code":"keep_ribo_samples(ribo = NULL, samples_to_keep = NULL)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/keep_ribo_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep only selected samples from a RiboClass Object. — keep_ribo_samples","text":"ribo RiboClass object. samples_to_keep vector containing names samples keep.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/keep_ribo_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep only selected samples from a RiboClass Object. — keep_ribo_samples","text":"RiboClass selected samples data metadata.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/keep_ribo_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keep only selected samples from a RiboClass Object. — keep_ribo_samples","text":"","code":"data(\"ribo_toy\") ribo_test <- keep_ribo_samples(ribo = ribo_toy, samples_to_keep = c(\"S1\", \"S2\"))"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/keep_selected_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep only a subset of the current annotation — keep_selected_annotation","title":"Keep only a subset of the current annotation — keep_selected_annotation","text":"Keep subset current annotation","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/keep_selected_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep only a subset of the current annotation — keep_selected_annotation","text":"","code":"keep_selected_annotation(ribo, annotation_to_keep)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/keep_selected_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep only a subset of the current annotation — keep_selected_annotation","text":"ribo RiboClass annotation_to_keep vector containing annotated sites'name keep","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/keep_selected_annotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep only a subset of the current annotation — keep_selected_annotation","text":"RiboClass annotated sites within annotation_to_keep still annotated.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/keep_selected_annotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keep only a subset of the current annotation — keep_selected_annotation","text":"","code":"data('ribo_toy') data('human_methylated') ribo_toy <- rename_rna(ribo_toy) ribo_toy <- annotate_site(ribo_toy,human_methylated) ribo_toy <- keep_selected_annotation(ribo_toy, c(\"28S_Am1310\",\"28S_Cm2848\"))"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/kruskal_test_on_cscores.html","id":null,"dir":"Reference","previous_headings":"","what":"Kruskal test on c-scores — kruskal_test_on_cscores","title":"Kruskal test on c-scores — kruskal_test_on_cscores","text":"Kruskal test c-scores","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/kruskal_test_on_cscores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kruskal test on c-scores — kruskal_test_on_cscores","text":"","code":"kruskal_test_on_cscores(   cscore_matrix = NULL,   metadata = NULL,   adjust_pvalues_method = \"fdr\",   factor_column = NULL )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/kruskal_test_on_cscores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kruskal test on c-scores — kruskal_test_on_cscores","text":"cscore_matrix Sites x Samples C-score matrix (output extract_data()). metadata Metadata associated samples c-score matrix. adjust_pvalues_method Method adjust p-value, one p.adjust.methods. factor_column Metadata column used group samples .","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/kruskal_test_on_cscores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kruskal test on c-scores — kruskal_test_on_cscores","text":"dataframe three columns : 1) site : RNA site, 2) p.val : raw p-values, 3) adjusted p-values.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/load_ribodata.html","id":null,"dir":"Reference","previous_headings":"","what":"Load csv files from GenomeCov and their associated metadata. Create a RiboClass. — load_ribodata","title":"Load csv files from GenomeCov and their associated metadata. Create a RiboClass. — load_ribodata","text":"Import count CSV files metadata create RiboClass. RiboClass used rRMSAnalyzer package analyses. function serves entrypoint rRMSAnalyzer.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/load_ribodata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load csv files from GenomeCov and their associated metadata. Create a RiboClass. — load_ribodata","text":"","code":"load_ribodata(   count_path,   metadata = NULL,   count_sep = \"\\t\",   metadata_sep = \",\",   count_header = FALSE,   count_value = 3,   count_rnaid = 1,   count_pos = 2,   metadata_key = \"filename\",   metadata_id = NULL,   flanking = 6,   method = \"median\",   ncores = 1 )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/load_ribodata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load csv files from GenomeCov and their associated metadata. Create a RiboClass. — load_ribodata","text":"count_path (required) path data folder containing count files. metadata Data frame path CSV file containing metadata. count_sep Delimiter used CSV files. metadata_sep Delimiter used metadata (imported file). count_header Boolean, specify count files header . count_value Name index column containing count values. count_rnaid Name index column containing name RNA count data. count_pos Name index column containing site's position count data. metadata_key (required metadata null) Name index column containing samples' filename. metadata_id Name index column containing sample name. flanking Size local coverage. method Computation method local coverage. Either 'median' 'mean'. ncores Number cores use case multithreading.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/load_ribodata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load csv files from GenomeCov and their associated metadata. Create a RiboClass. — load_ribodata","text":"RiboClass","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/load_ribodata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load csv files from GenomeCov and their associated metadata. Create a RiboClass. — load_ribodata","text":"load_ribodata wrapper new_riboclass compute_cscore.","code":""},{"path":[]},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/mean_samples_by_conditon.html","id":null,"dir":"Reference","previous_headings":"","what":"Regroup samples by condition and calculate mean for each condition — mean_samples_by_conditon","title":"Regroup samples by condition and calculate mean for each condition — mean_samples_by_conditon","text":"helper function give mean condition cscore count, position. standard deviation also given. can used create boxplot ggplot.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/mean_samples_by_conditon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regroup samples by condition and calculate mean for each condition — mean_samples_by_conditon","text":"","code":"mean_samples_by_conditon(   ribo,   value,   metadata_condition,   only_annotated = FALSE )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/mean_samples_by_conditon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regroup samples by condition and calculate mean for each condition — mean_samples_by_conditon","text":"ribo RiboClass object value name index column containing values mean condition calculated. (Either \"cscore\" \"count\") metadata_condition name index column metadata containing condition only_annotated use annotation site name instead default","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/mean_samples_by_conditon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Regroup samples by condition and calculate mean for each condition — mean_samples_by_conditon","text":"dataframe mean condition selected value","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/mean_samples_by_conditon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regroup samples by condition and calculate mean for each condition — mean_samples_by_conditon","text":"","code":"data(\"ribo_toy\") mean_df <- mean_samples_by_conditon(ribo_toy,\"count\",\"condition\")"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/new_riboclass.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RiboClass from count files and metadata. — new_riboclass","title":"Create a RiboClass from count files and metadata. — new_riboclass","text":"Read ribomethseq count files associated metadata merge RiboClass. constructor RiboClass S3 class. functions use RiboClass input. constructor called directly. create RiboClass, please use load_ribodata.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/new_riboclass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RiboClass from count files and metadata. — new_riboclass","text":"","code":"new_riboclass(   count_path,   metadata = NULL,   count_sep = \"\\t\",   metadata_sep = \",\",   count_header = FALSE,   count_value = 3,   count_rnaid = 1,   count_pos = 2,   metadata_key = \"filename\",   metadata_id = NULL )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/new_riboclass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RiboClass from count files and metadata. — new_riboclass","text":"count_path (required) path data folder containing count files. metadata Data frame path CSV file containing metadata. count_sep Delimiter used CSV files. metadata_sep Delimiter used metadata (imported file). count_header Boolean, specify count files header . count_value Name index column containing count values. count_rnaid Name index column containing name RNA count data. count_pos Name index column containing site's position count data. metadata_key (required metadata null) Name index column containing samples' filename. metadata_id Name index column containing sample name.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/new_riboclass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RiboClass from count files and metadata. — new_riboclass","text":"RiboClass.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/new_riboclass.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a RiboClass from count files and metadata. — new_riboclass","text":"RiboClass object S3 Class three elements : data : list dataframe, corresponding sample. dataframe starts following columns : rna : name RNA given position. rnapos : position current RNA. count : number read starting (5'end) ending (3'end) position. site : name site, empty RiboClass creation. fill column, use annotate_site. metadata : dataframe containing information related sample. particularly useful technical biases correction (adjust_bias) plot functions (coloring add extra layer informations). metadata given, empty one generated. rna_names : dataframe containing original current rna names. name RNAs can renamed sake clarity plots (rename_rna), original ones can contain important information, like NCBI ID. path given count_path contains necessary CSV files (one per sample). directory structure important, make sure sample unique filename. path csv file dataframe given metadata must contains filename column, serve link metadata dataframes data RiboClass creation.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_coa.html","id":null,"dir":"Reference","previous_headings":"","what":"Correspondence analysis of a RiboClass' counts. — plot_coa","title":"Correspondence analysis of a RiboClass' counts. — plot_coa","text":"Correspondence analysis RiboClass' counts.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_coa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correspondence analysis of a RiboClass' counts. — plot_coa","text":"","code":"plot_coa(   ribo,   color_col = NULL,   axes = c(1, 2),   only_annotated = FALSE,   title = \"default\",   subtitle = \"default\",   object_only = FALSE )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_coa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correspondence analysis of a RiboClass' counts. — plot_coa","text":"ribo RiboClass object. color_col Name column metadata used coloring samples. axes Two-element vector indicating pair COA components show. only_annotated TRUE, use annotated sites plot COA. title Title display plot. 'default' default title. subtitle Subtitle display plot. 'samples' number samples. 'none' subtitle. object_only Return directly full dudi.coa object, without generating plot.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_coa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correspondence analysis of a RiboClass' counts. — plot_coa","text":"ggplot dudi.coa object object_only set True.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_coa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correspondence analysis of a RiboClass' counts. — plot_coa","text":"","code":"data('ribo_toy') plot_coa(ribo = ribo_toy, color_col = 'condition')"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_counts_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot counts for a given position on a given RNA — plot_counts_env","title":"Plot counts for a given position on a given RNA — plot_counts_env","text":"Plot counts given position given RNA","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_counts_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot counts for a given position on a given RNA — plot_counts_env","text":"","code":"plot_counts_env(   ribo = NULL,   rna = NULL,   pos = NULL,   samples = \"all\",   flanking = 6 )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_counts_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot counts for a given position on a given RNA — plot_counts_env","text":"ribo RiboClass object rna Name RNA position located pos Position RNA view centered samples Samples display. \"\" display samples. flanking Number sites display left/right selected position.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_counts_env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot counts for a given position on a given RNA — plot_counts_env","text":"","code":"data(\"ribo_toy\") ribo_toy <- rename_rna(ribo = ribo_toy) plot_counts_env(ribo = ribo_toy, rna = \"5.8S\", pos = 15)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_counts_fraction.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot count distribution among RNAs for each sample — plot_counts_fraction","title":"Plot count distribution among RNAs for each sample — plot_counts_fraction","text":"Plot count distribution among RNAs sample","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_counts_fraction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot count distribution among RNAs for each sample — plot_counts_fraction","text":"","code":"plot_counts_fraction(ribo)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_counts_fraction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot count distribution among RNAs for each sample — plot_counts_fraction","text":"ribo RiboClass object.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_counts_fraction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot count distribution among RNAs for each sample — plot_counts_fraction","text":"ggplot object","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_counts_fraction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot count distribution among RNAs for each sample — plot_counts_fraction","text":"","code":"data(\"ribo_toy\") plot_counts_fraction(ribo_toy)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_diff_sites.html","id":null,"dir":"Reference","previous_headings":"","what":"plot differential sites between conditions. — plot_diff_sites","title":"plot differential sites between conditions. — plot_diff_sites","text":"Display boxplot condition site sufficent difference conditions. Kruskal-Wallis p-value displayed bottom left boxplot.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_diff_sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot differential sites between conditions. — plot_diff_sites","text":"","code":"plot_diff_sites(   ribo,   factor_column,   p_cutoff = 0.01,   cscore_cutoff = 0.05,   adjust_pvalues_method = \"fdr\",   object_only = FALSE )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_diff_sites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot differential sites between conditions. — plot_diff_sites","text":"ribo RiboClass object. factor_column Metadata column used group samples . p_cutoff Cutoff adjusted p-value kruskal-wallis test. cscore_cutoff Cutoff max-min c-score range conditions' mean considered significant. adjust_pvalues_method Method used adjust p-value (one p.adjust.methods) object_only Return results kruskal-wallis C-score mean range dataframe directly.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_diff_sites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot differential sites between conditions. — plot_diff_sites","text":"ggplot object.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_diff_sites.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot differential sites between conditions. — plot_diff_sites","text":"considered differential, site must follow two conditions : significant p-value Kruskal-wallis test c-score conditions. C-score range conditions (max median - min mea) certain cutoff. p-value cutoff c-score range cutoff can changed p_cutoff cscore_cutoff parameters respectively.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_diff_sites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot differential sites between conditions. — plot_diff_sites","text":"","code":"data(\"ribo_toy\") data(\"human_methylated\") ribo_toy <- rename_rna(ribo_toy) ribo_toy <- annotate_site(ribo_toy,human_methylated) plot_diff_sites(ribo_toy,\"condition\", p_cutoff=0.1) #> 7 significant sites found !"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot heatmap for a riboclass object. — plot_heatmap","title":"Plot heatmap for a riboclass object. — plot_heatmap","text":"easy function let display heatmap given column (count c-score). can add additionnal layer information metadata columns.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot heatmap for a riboclass object. — plot_heatmap","text":"","code":"plot_heatmap(   ribo,   color_col = NULL,   only_annotated = FALSE,   title,   cutree_rows = 4,   cutree_cols = 2,   ... )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot heatmap for a riboclass object. — plot_heatmap","text":"ribo RiboClass object. color_col Vector metadata columns’ name used coloring samples. only_annotated Use annotated sites (default = TRUE). title Title display plot. \"default\" default title. cutree_rows number clusters rows divided , based hierarchical clustering (using cutree). cutree_cols number clusters columns divided , based hierarchical clustering (using cutree). ... Pheatmap’s parameters","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot heatmap for a riboclass object. — plot_heatmap","text":"ggplot object heatmap. distance used manhattan clustering method Ward.D2. See ComplexHeatmap doc details","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot heatmap for a riboclass object. — plot_heatmap","text":"","code":"data(\"ribo_toy\") data(\"human_methylated\")#'  ribo_toy <- rename_rna(ribo_toy) ribo_toy <- annotate_site(ribo_toy,human_methylated) plot_heatmap(ribo_toy,  color_col = c(\"run\",\"condition\"), only_annotated=TRUE)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_heatmap_corr.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a correlation heatmap from a riboclass object.\n\nShows the correlation distance between samples. — plot_heatmap_corr","title":"Plot a correlation heatmap from a riboclass object.\n\nShows the correlation distance between samples. — plot_heatmap_corr","text":"Plot correlation heatmap riboclass object. Shows correlation distance samples.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_heatmap_corr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a correlation heatmap from a riboclass object.\n\nShows the correlation distance between samples. — plot_heatmap_corr","text":"","code":"plot_heatmap_corr(ribo, values_col, color_col = NULL)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_heatmap_corr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a correlation heatmap from a riboclass object.\n\nShows the correlation distance between samples. — plot_heatmap_corr","text":"ribo RiboClass object. values_col Name column containing value (either count cscore). color_col Vector metadata columns’ name used coloring samples.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_heatmap_corr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a correlation heatmap from a riboclass object.\n\nShows the correlation distance between samples. — plot_heatmap_corr","text":"ComplexHeatmap object","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_heatmap_corr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a correlation heatmap from a riboclass object.\n\nShows the correlation distance between samples. — plot_heatmap_corr","text":"","code":"data(\"ribo_toy\") plot_heatmap_corr(ribo_toy,\"count\",\"condition\")"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_most_differential_sites.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Display differential sites. — plot_most_differential_sites","title":"(Internal) Display differential sites. — plot_most_differential_sites","text":"Using dataframes obtained ","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_most_differential_sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Display differential sites. — plot_most_differential_sites","text":"","code":"plot_most_differential_sites(   df_of_Cscores = NULL,   df_of_kruskal = NULL,   most_differential_sites = NULL )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_most_differential_sites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Display differential sites. — plot_most_differential_sites","text":"df_of_Cscores Dataframe positions x samples c-score. Output extract_data(). df_of_kruskal Output kruskal_test_on_cscores() most_differential_sites list differential sites. Output select_most_differential_sites function.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Principal component analysis of a RiboClass object — plot_pca","title":"Principal component analysis of a RiboClass object — plot_pca","text":"Principal component analysis RiboClass object","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Principal component analysis of a RiboClass object — plot_pca","text":"","code":"plot_pca(   ribo,   color_col = NULL,   axes = c(1, 2),   only_annotated = FALSE,   title = \"default\",   subtitle = \"samples\",   object_only = FALSE )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Principal component analysis of a RiboClass object — plot_pca","text":"ribo RiboClass object. color_col Name column metadata used coloring samples. axes Two-element vector indicating pair principal components  show. only_annotated TRUE, use annotated sites plot PCA. title Title display plot. 'default' default title. subtitle Subtitle display plot. 'samples' number samples. 'none' subtitle. object_only Return directly full dudi.pca object, without generating plot.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Principal component analysis of a RiboClass object — plot_pca","text":"ggplot dudi.pca object object_only set True.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Principal component analysis of a RiboClass object — plot_pca","text":"","code":"data('ribo_toy') plot_pca(ribo_toy,'run')"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_rle.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative Log Expression plot of a RiboClass object’s counts. — plot_rle","title":"Relative Log Expression plot of a RiboClass object’s counts. — plot_rle","text":"Relative Log Expression plot RiboClass object’s counts.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_rle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative Log Expression plot of a RiboClass object’s counts. — plot_rle","text":"","code":"plot_rle(ribo, show_outlier = TRUE)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_rle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative Log Expression plot of a RiboClass object’s counts. — plot_rle","text":"ribo RiboClass object. show_outlier Show boxplot outlier values.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_rle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relative Log Expression plot of a RiboClass object’s counts. — plot_rle","text":"ggplot object. Samples median lower median(RLE counts)-2*MAD (Median Absolute Deviation) colored red.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/plot_rle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relative Log Expression plot of a RiboClass object’s counts. — plot_rle","text":"","code":"data(\"ribo_toy\") plot_rle(ribo_toy)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/print.RiboClass.html","id":null,"dir":"Reference","previous_headings":"","what":"print() to display basic informations about a RiboClass — print.RiboClass","title":"print() to display basic informations about a RiboClass — print.RiboClass","text":"print() display basic informations RiboClass","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/print.RiboClass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print() to display basic informations about a RiboClass — print.RiboClass","text":"","code":"# S3 method for RiboClass print(x, ...)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/print.RiboClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print() to display basic informations about a RiboClass — print.RiboClass","text":"x RiboClass ... print() params","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/rRMSAnalyzer-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rRMSAnalyzer package dedicated to analysis of RiboMethSeq data — rRMSAnalyzer-package","title":"rRMSAnalyzer package dedicated to analysis of RiboMethSeq data — rRMSAnalyzer-package","text":"rRMSAnalyzer package designed give easy--use functions dedicated RiboMethSeq (RMS) analyses. functions revolve around RiboClass, S3 class containing RMS data samples  metadata.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/rRMSAnalyzer-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rRMSAnalyzer package dedicated to analysis of RiboMethSeq data — rRMSAnalyzer-package","text":"main functions (standard workflow chronological order): load_ribodata - import data create RiboClass. Objects class used functions compute_cscore - compute C-score genomic positions sample adjust_bias - adjust technical biases RiboMethSeq data ComBat-seq extract_data - get dataframe C-score samples positions RiboClass Plots, e.g.: plot_pca; plot_coa plot_heatmap. know start using package, look vignette  vignette(\"rRMSAnalyzer\"). give example commands workflow. code can viewed GitHub repository : https://github.com/RibosomeCRCL/rRMSAnalyzer","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/rRMSAnalyzer-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rRMSAnalyzer package dedicated to analysis of RiboMethSeq data — rRMSAnalyzer-package","text":"Théo COMBE, Hermes PARAQINDES, Janice KIELBASSA","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/remove_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove site annotations of a given RiboClass — remove_annotation","title":"Remove site annotations of a given RiboClass — remove_annotation","text":"Remove site annotations given RiboClass","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/remove_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove site annotations of a given RiboClass — remove_annotation","text":"","code":"remove_annotation(ribo, annotation_to_remove = NULL)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/remove_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove site annotations of a given RiboClass — remove_annotation","text":"ribo RiboClass object. annotation_to_remove Specific annotated sites remove. set NULL, function removes annotations.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/remove_annotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove site annotations of a given RiboClass — remove_annotation","text":"RiboClass object annotated position replaced NA, default value.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/remove_annotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove site annotations of a given RiboClass — remove_annotation","text":"","code":"data('ribo_toy') remove_annotation(ribo_toy) #> a RiboClass with 14 samples and 4 RNA(s) : #> Name : NR_023363.1_5S, length : 121 #>  Name : NR_046235.3_5.8S, length : 157 #>  Name : NR_046235.3_18S, length : 1869 #>  Name : NR_046235.3_28S, length : 5070"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/remove_ribo_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove samples from a Riboclass object — remove_ribo_samples","title":"Remove samples from a Riboclass object — remove_ribo_samples","text":"Remove samples Riboclass object","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/remove_ribo_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove samples from a Riboclass object — remove_ribo_samples","text":"","code":"remove_ribo_samples(ribo = NULL, samples_to_delete = NULL)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/remove_ribo_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove samples from a Riboclass object — remove_ribo_samples","text":"ribo RiboClass object. samples_to_delete vector containing names samples remove.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/remove_ribo_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove samples from a Riboclass object — remove_ribo_samples","text":"RiboClass without removed samples data metadata.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/remove_ribo_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove samples from a Riboclass object — remove_ribo_samples","text":"","code":"data(\"ribo_toy\") ribo_test <- remove_ribo_samples(ribo = ribo_toy, samples_to_delete = c(\"S1\", \"S2\"))"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/remove_rna.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove one or more RNA among your RiboClass' samples — remove_rna","title":"Remove one or more RNA among your RiboClass' samples — remove_rna","text":"Remove one RNA among RiboClass' samples","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/remove_rna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove one or more RNA among your RiboClass' samples — remove_rna","text":"","code":"remove_rna(ribo, rna_to_remove)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/remove_rna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove one or more RNA among your RiboClass' samples — remove_rna","text":"ribo RiboClass object. rna_to_remove One RNA name vector RNA names.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/remove_rna.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove one or more RNA among your RiboClass' samples — remove_rna","text":"RiboClass RNA(s) removed data rna_names sections.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/remove_rna.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove one or more RNA among your RiboClass' samples — remove_rna","text":"","code":"data(\"ribo_toy\") ribo_toy <- remove_rna(ribo_toy, \"NR_023363.1_5S\")"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/rename_rna.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename RNAs in a RiboClass object — rename_rna","title":"Rename RNAs in a RiboClass object — rename_rna","text":"Rename RNAs RiboClass object","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/rename_rna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename RNAs in a RiboClass object — rename_rna","text":"","code":"rename_rna(ribo, new_names = c(\"5S\", \"5.8S\", \"18S\", \"28S\"))"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/rename_rna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename RNAs in a RiboClass object — rename_rna","text":"ribo RiboClass object. new_names Vector new RNA names (RNA size order).","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/rename_rna.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename RNAs in a RiboClass object — rename_rna","text":"RiboClass updated RNA names data rna_names sections.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/rename_rna.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename RNAs in a RiboClass object — rename_rna","text":"","code":"data(\"ribo_toy\") ribo_toy <- rename_rna(ribo_toy ,c(\"5S\",\"5.8S\",\"18S\",\"28S\"))"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/report.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to generate HTML report using Rmarkdown — report","title":"Function to generate HTML report using Rmarkdown — report","text":"Note : want create report template, please make sure following header : --- title: \"RMSAnalyzer : title report\" output: html_document params:  library_col: \"library\"  condition_col: \"condition\"  ribo_name: \"ribo\"  project_name: \"Unnamed project\" ---","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to generate HTML report using Rmarkdown — report","text":"","code":"report(   ribo,   ribo_name,   rmdfile,   condition_col,   library_col,   project_name,   output_dir )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to generate HTML report using Rmarkdown — report","text":"ribo RiboClass object. rmdfile filename Rmarkdown template use. condition_col name index column __in metadata__ containing condition library_col name index column __in metadata__ containing library project_name Name project display report. output_dir Path output directory","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/report_qc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate html report about possible batch effect for a given RiboClass. — report_qc","title":"Generate html report about possible batch effect for a given RiboClass. — report_qc","text":"Generate html report possible batch effect given RiboClass.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/report_qc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate html report about possible batch effect for a given RiboClass. — report_qc","text":"","code":"report_qc(   ribo,   library_col,   project_name = \"Unnamed project\",   output_dir = getwd() )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/report_qc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate html report about possible batch effect for a given RiboClass. — report_qc","text":"ribo RiboClass object. library_col Library/run column metadata. project_name Name project. output_dir Path output dir. Working directory selected default.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/ribo_toy.html","id":null,"dir":"Reference","previous_headings":"","what":"RiboClass from a toy dataset — ribo_toy","title":"RiboClass from a toy dataset — ribo_toy","text":"riboclass containing 10 samples + 2 reference RNA.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/ribo_toy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RiboClass from a toy dataset — ribo_toy","text":"","code":"data(ribo_toy)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/ribo_toy.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"RiboClass from a toy dataset — ribo_toy","text":"RiboClass (S3 Class) following element data list sample dataframe metadata metadata dataframe samples rna_names dataframe containing original modified RNAs name","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/ribo_toy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"RiboClass from a toy dataset — ribo_toy","text":"Samples 4 different biological conditions (\"condition\" column metadata). sequencing done two different batches (\"run\" column metadata). batches reference RNA, detect technical bias.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/select_most_differential_sites.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a list of differential sites. — select_most_differential_sites","title":"Return a list of differential sites. — select_most_differential_sites","text":"Return list differential sites.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/select_most_differential_sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a list of differential sites. — select_most_differential_sites","text":"","code":"select_most_differential_sites(   df_of_kruskal = NULL,   p_cutoff = 0.01,   cscore_cutoff = 0.05 )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/select_most_differential_sites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a list of differential sites. — select_most_differential_sites","text":"df_of_kruskal Output kruskal_test_on_cscores(). p_cutoff Cutoff kruskal-wallis test considered significant given site. cscore_cutoff Cutoff max-min c-score range conditions' mean considered significant.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/select_most_differential_sites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a list of differential sites. — select_most_differential_sites","text":"vector sites differentials","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/select_most_differential_sites.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return a list of differential sites. — select_most_differential_sites","text":"considered differential, site must follow two conditions : significant p-value Kruskal-wallis test c-score conditions. C-score range conditions (max median - min mea) certain cutoff. p-value cutoff c-score range cutoff can changed p_cutoff cscore_cutoff parameters respectively.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/show_rna_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Display RNA names — show_rna_names","title":"Display RNA names — show_rna_names","text":"Display RNA names","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/show_rna_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display RNA names — show_rna_names","text":"","code":"show_rna_names(ribo = NULL)"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/show_rna_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display RNA names — show_rna_names","text":"ribo RiboClass object","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/show_rna_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display RNA names — show_rna_names","text":"vector actual RNA names","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/show_rna_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display RNA names — show_rna_names","text":"","code":"data(\"ribo_toy\") show_rna_names(ribo = ribo_toy) #> [1] NR_023363.1_5S   NR_046235.3_5.8S NR_046235.3_18S  NR_046235.3_28S  #> Levels: NR_023363.1_5S NR_046235.3_5.8S NR_046235.3_18S NR_046235.3_28S"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/wrapper_kruskal_test.html","id":null,"dir":"Reference","previous_headings":"","what":"(internal) Test which sites are the most variable between conditions — wrapper_kruskal_test","title":"(internal) Test which sites are the most variable between conditions — wrapper_kruskal_test","text":"function outputs result plot_diff_sites, dataframe. called directly, use \"only_df = TRUE\" plot_diff_sites instead.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/wrapper_kruskal_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(internal) Test which sites are the most variable between conditions — wrapper_kruskal_test","text":"","code":"wrapper_kruskal_test(   ribo = NULL,   adjust_pvalues_method = \"fdr\",   factor_column = NULL )"},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/wrapper_kruskal_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(internal) Test which sites are the most variable between conditions — wrapper_kruskal_test","text":"ribo RiboClass adjust_pvalues_method p-value adjustment method (default : \"fdr\") factor_column Metadata column used group samples .","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/wrapper_kruskal_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(internal) Test which sites are the most variable between conditions — wrapper_kruskal_test","text":"dataframe site row following column :  1) site : name site; 2) p.val : raw p-value; 3) p.adj : adjusted p-value 4) mean_max_min_difference : range conditions mean c-score","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/reference/wrapper_kruskal_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(internal) Test which sites are the most variable between conditions — wrapper_kruskal_test","text":"considered differential, site must follow two conditions : significant p-value Kruskal-wallis test c-score conditions. C-score range conditions (max median - min mea) certain cutoff. p-value cutoff c-score range cutoff can changed p_cutoff cscore_cutoff parameters respectively.","code":""},{"path":[]},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/news/index.html","id":"new-feature-2-0-1","dir":"Changelog","previous_headings":"","what":"New feature","title":"rRMSAnalyzer 2.0.1","text":"get_annotation(): get dataframe current annotation RiboClass. remove_annotation(): Added new parameter select subset annotation remove.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/news/index.html","id":"rrmsanalyzer-200","dir":"Changelog","previous_headings":"","what":"rRMSAnalyzer 2.0.0","title":"rRMSAnalyzer 2.0.0","text":"Added NEWS.md file track changes package.","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/news/index.html","id":"breaking-change-2-0-0","dir":"Changelog","previous_headings":"","what":"Breaking change","title":"rRMSAnalyzer 2.0.0","text":"plot_PCA()renamed plot_pca().","code":""},{"path":[]},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/news/index.html","id":"plots-2-0-0","dir":"Changelog","previous_headings":"New features","what":"Plots","title":"rRMSAnalyzer 2.0.0","text":"Correspondence analysis samples’ counts : plot_coa() Heatmaps: plot_heatmap() plot_heatmap_corr() “Simple” boxplots : boxplot_count() (sample) boxplot_cscores() (site) Boxplot comparing c-score condition sites considered differential plot_diff_sites() others: plot_counts_env(), plot_counts_fraction()…","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/news/index.html","id":"error-messages-2-0-0","dir":"Changelog","previous_headings":"New features","what":"Error messages","title":"rRMSAnalyzer 2.0.0","text":"Error messages now using Cli package better clarity error messages help users","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/news/index.html","id":"bugfixes--improvements-2-0-0","dir":"Changelog","previous_headings":"","what":"Bugfixes & improvements","title":"rRMSAnalyzer 2.0.0","text":"compute_cscore() drastically improved terms performance","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/news/index.html","id":"rrmsanalyzer-100","dir":"Changelog","previous_headings":"","what":"rRMSAnalyzer 1.0.0","title":"rRMSAnalyzer 1.0.0","text":"First public version rRMSAnalyzer 🥳 !","code":""},{"path":"https://ribosomecrcl.github.io/rRMSAnalyzer/news/index.html","id":"new-features-1-0-0","dir":"Changelog","previous_headings":"","what":"New features","title":"rRMSAnalyzer 1.0.0","text":"main features shown : C-score computation positions (compute_cscore()) Technical biases adjustment CombatSeq (adjust_bias()) Principal Component Analysis (plot_PCA())","code":""}]
